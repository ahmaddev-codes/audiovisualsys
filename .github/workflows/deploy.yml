name: Build and Deploy to Azure

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY_NAME: audiovisualsys
  IMAGE_NAME: audiovisualsys
  DOCKER_BUILDKIT: 1

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        run: |
          az acr login --name ${{ env.REGISTRY_NAME }}

      - name: Generate image tag
        id: image-info
        run: |
          IMAGE_TAG=${{ github.sha }}
          echo "tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT
          echo "Using image tag: ${IMAGE_TAG}"

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ steps.image-info.outputs.tag }}
            ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest
          platforms: linux/amd64

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: audiovisualsys
          slot-name: production
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ steps.image-info.outputs.tag }}

      - name: Configure Azure Web App with Container
        run: |
          az webapp config container set \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name audiovisualsys \
            --docker-custom-image-name ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ steps.image-info.outputs.tag }} \
            --docker-registry-server-url https://${{ env.REGISTRY_NAME }}.azurecr.io \
            --docker-registry-server-user ${{ secrets.REGISTRY_USERNAME }} \
            --docker-registry-server-password ${{ secrets.REGISTRY_PASSWORD }}

          az webapp config appsettings set \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name audiovisualsys \
            --settings \
              WEBSITES_PORT=8000 \
              DEBUG=False \
              DJANGO_SETTINGS_MODULE=audiovisualsys.settings \
              SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }} \
              ALLOWED_HOSTS=audiovisualsys.azurewebsites.net
