name: Deploy Django app to Azure Web App (Linux)

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: audiovisualsys
  PYTHON_VERSION: "3.11"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up environment variables for build
        run: |
          echo "DJANGO_SETTINGS_MODULE=audiovisualsys.settings" >> $GITHUB_ENV
          echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "DEBUG=False" >> $GITHUB_ENV

      - name: Verify deployment files
        run: |
          echo "Checking deployment files..."
          ls -la
          echo "Checking requirements.txt..."
          cat requirements.txt

      - name: Create necessary directories
        run: |
          mkdir -p uploads image_files audio_files media staticfiles

      - name: Collect static files
        run: |
          python manage.py collectstatic --noinput

      - name: Verify startup files
        run: |
          echo "Checking startup.txt..."
          if [ -f startup.txt ]; then
            cat startup.txt
          else
            echo "startup.txt not found"
          fi
          
          echo "Checking startup.sh..."
          if [ -f startup.sh ]; then
            cat startup.sh
          else
            echo "startup.sh not found"
          fi

      - name: Deploy to Azure Web App (Linux)
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: "production"
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}

      - name: Wait for deployment
        run: |
          echo "Waiting for deployment to complete..."
          sleep 30
